name: Terraform CI/CD

on:
  workflow_dispatch:
  repository_dispatch:
    types: [terraform_apply]

jobs:
  terraform:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          repository: ${{ github.event.client_payload.repository }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Authenticate to Google Cloud
        id: authenticate
        uses: google-github-actions/auth@v2
        with:
          create_credentials_file: true
          workload_identity_provider: ${{ vars.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ vars.GCP_SERVICE_ACCOUNT }}

        # The Google Cloud SDK is used to generate an access token when authenticating with Artifact Registry. Make sure that it is installed and initialised with Application Default Credentials before proceeding.

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          version: '>= 363.0.0'

      - name: set credentials file
        run: >-
          gcloud auth login --cred-file=${{steps.authenticate.outputs.credentials_file_path}}

      # - name: Set up Terraform
      #   uses: hashicorp/setup-terraform@v1
      #   with:
      #     terraform_version: 1.0.0

      # - name: Terraform Init
      #   id: init
      #   run: terraform init
      #   working-directory: terraform

      # - name: Terraform Format
      #   id: fmt
      #   run: terraform fmt
      #   working-directory: terraform

      # - name: Terraform Validate
      #   id: validate
      #   run: terraform validate
      #   working-directory: terraform

      # Run a gcloud command to test authentication
      - name: List Google Cloud Projects
        run: |
          gcloud projects list

      # - name: Terraform Plan
      #   id: plan
      #   run: terraform plan -out=tfplan
      #   working-directory: terraform

      # - name: Terraform Apply
      #   id: apply
      #   run: terraform apply -auto-approve tfplan
      #   working-directory: terraform

      # Deploy the docker image to kubernetes
      # - name: Deploy to Kubernetes
      #   run: |
      #     kubectl apply -f k8s/deployment.yaml
      #     kubectl apply -f k8s/service.yaml
      


      # Deploy the image from Artifact Registry to Cloud Run
      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy gha-runner-service \
            --image "${{ vars.GCP_REGION }}-docker.pkg.dev/${{ vars.GCP_PROJECT_ID_VAL }}/my-repo/actions-runner:latest" \
            --region ${{ vars.GCP_REGION }} \
            --no-allow-unauthenticated \
            --platform managed \
            --port 8080 \
            --service-account ${{ vars.GCP_SERVICE_ACCOUNT }}

      # Get Identity Token for Cloud Run invocation
      - name: Get ID Token
        id: 'auth'
        run: |
          export ID_TOKEN=$(gcloud auth print-identity-token)
          echo "ID_TOKEN=${ID_TOKEN}" >> $GITHUB_ENV

      # Invoke Cloud Run Service
      - name: Invoke Cloud Run Service
        run: |
          curl -X POST \
            -H "Authorization: Bearer ${{ steps.auth.outputs.ID_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d '{"message":"Hello from GitHub Actions"}' \
            https://gha-runner-service-${{ vars.GCP_REGION }}.a.run.app
